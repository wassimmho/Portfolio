File Management System (FMS)
Table of Contents
Overview
General Information
Tools Used
Installation
Usage
Project Structure
Contributors
Overview
The File Management System (FMS) is a project that simulates the core functionality of a file management system, an essential component of operating systems. It models fundamental principles such as organizing and managing files on secondary memory (disk storage).

Key Features
Memory Organization: Simulates memory using blocks.
File Space Allocation: Handles file storage and management.
File Metadata Management: Tracks information about files.
Basic File Operations: Includes creating, inserting, searching, and deleting files and records.
interface interface2
General Information
Features
Interactive Menu: Offers options to initialize memory, manage files, view memory status, and perform operations.
Memory Visualization: Displays free and occupied memory blocks graphically.
Metadata Viewing: Allows inspection of file metadata.
File Operations:
Add, search, insert, delete, and rename files or records.
Logical and physical deletion options.
Memory Management: Includes defragmentation and space management features.
Tools Used
C Language: Implementation of file management logic and memory handling.
Raylib: Provides graphical interface and interactivity.
Raylib Official Site
C Language Logo
Raylib Logo

Installation
Prerequisites
C Compiler: GCC for Linux, MinGW for Windows.
Raylib Installed.
Installation Steps
Linux
Linux
Clone the repository:

git clone https://github.com/wassimmho/Project-SFSD
cd Project-SFSD
Build and Run the project :

./build/build.sh
Windows
Clone the repository :

    git clone https://github.com/wassimmho/Project-SFSD
    cd Project-SFSD
Build and Run the project :

./build/build.bat
Usage
This project provides an intuitive interface for managing files and records, offering the following powerful features:

Add Files:
Easily add new files or records to the system.

Delete Files/Records:
Files and records can be deleted in two ways:

Logical Deletion: Marks the file or record as deleted without removing it from the system.
Physical Deletion: Completely removes the file or record from the system.
Insert Files:
Insert new files at any specified location within the project structure.

Rename Files:
Rename files to improve organization and clarity.

View Files/Records:
View detailed information or content of selected files or records.

Search:
Quickly search for files or records by name or other attributes to find what you're looking for.

Free MS (Memory Space):
This section allows users to manage all files and records freely, offering the flexibility to modify, move, or organize them without restrictions.

Save Changes:
Ensure all modifications made to the files, records, or structure are saved for future use.

Project Structure
An explanation of the project files and directories.

SFSD/
├── build/
│   ├── build.bat
│   ├── build.sh
├── debug/
│   └── myprogram.exe
├── Exe file/
│   ├── w64devkit.exe
│   └── w64devkit.ini
├── images/
│   ├── Clogo.png
│   └── raylib_180x180.png
├── include/
│   ├── header.h
│   ├── raygui.h
│   └── raylib.h
├── Project-SFSD/
│   ├── output/
│   ├── FMS_Main.c
│   ├── version1.exe
│   ├── version2.c
├── Wlib/
│   └── libraylib.a
└── README.md